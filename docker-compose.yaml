services:
  configsvr:
    image: mongo:latest
    container_name: configsvr
    command: mongod --configsvr --replSet configReplSet --port 27019 --bind_ip_all --dbpath /data/db
    volumes:
      - configdb:/data/db
    ports: ["27019:27019"]
    networks: [adad_network]

  shard1:
    image: mongo:latest
    container_name: shard1
    command: mongod --shardsvr --replSet shard1ReplSet --port 27018 --bind_ip_all --dbpath /data/db
    volumes:
      - shard1db:/data/db
    ports: ["27018:27018"]
    networks: [adad_network]

  shard2:
    image: mongo:latest
    container_name: shard2
    command: mongod --shardsvr --replSet shard2ReplSet --port 27017 --bind_ip_all --dbpath /data/db
    volumes:
      - shard2db:/data/db
    ports: ["27017:27017"]
    networks: [adad_network]

  router:
    image: mongo:latest
    container_name: router
    command: mongos --configdb configReplSet/configsvr:27019 --port 27020 --bind_ip_all
    ports: ["27020:27020"]
    depends_on:
      - configsvr
      - shard1
      - shard2
    networks: [adad_network]

  sharding_init:
    image: mongo:latest
    container_name: sharding_init
    volumes:
      - ./database/init.sh:/init.sh
      - ./database/data:/data
    command: bash /init.sh
    depends_on:
      - router
    networks: [adad_network]

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: adad-backend
    restart: always
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./.env 
    expose:
      - 5000
    networks:
      - adad_network
    depends_on:
      - router

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: adad-frontend
    command: npm run start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - 3000
    networks:
      - adad_network
    depends_on:
      - backend

  nginx:
    image: nginx:stable-alpine
    container_name: adad-nginx-proxy
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs:ro
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - adad_network
    depends_on:
      - frontend
      - backend

volumes:
  configdb:
  shard1db:
  shard2db:

networks:
  adad_network:
    driver: bridge

